{"version":3,"sources":["Component/Filter.js","Component/PersonForm.js","Component/Person.js","Component/Persons.js","Services/personService.js","Component/Notification.js","App.js","index.js"],"names":["filteredPersons","persons","searchName","filter","person","name","includes","Filter","handleSearchNameChange","onChange","value","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Person","deletePerson","number","onClick","Persons","map","key","baseUrl","request","axios","get","console","log","then","response","data","newObject","post","id","put","delete","Notification","message","messageType","style","color","fontStyle","fontSize","App","useState","setPersons","setNewName","setNewNumber","setSearchName","notification","setNotification","useEffect","personService","initialResponse","length","updatePerson","existingPersonId","newPersonObject","returnedPerson","setTimeout","catch","Error","p","event","target","preventDefault","existingPerson","window","confirm","concat","error","newPersonArray","indexOfDeletedPerson","findIndex","personToBeDeleted","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1d56264.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst filteredPersons = (persons, searchName) => {\r\n    persons.filter(person => person.name.includes(searchName))\r\n}\r\n\r\n\r\nconst Filter = ({persons, searchName, handleSearchNameChange}) => {\r\n    return (\r\n    <div>\r\n    <form onChange={filteredPersons(persons, searchName)}>\r\n      <input value={searchName}\r\n             onChange={handleSearchNameChange} />\r\n    </form>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {\r\n    return(\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name:\r\n            <input value={newName}\r\n            onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number:\r\n            <input value={newNumber}\r\n            onChange={handleNumberChange} />\r\n        </div>\r\n        <button type=\"submit\">add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    return(\r\n        <div>\r\n                {person.name} {person.number} \r\n                <button type=\"submit\" value={person.name} onClick={deletePerson}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({filteredPersons, deletePerson}) => {\r\n    return(\r\n      filteredPersons.map(person =>\r\n      <Person\r\n        key={person.name}\r\n        person={person}\r\n        deletePerson={deletePerson} />\r\n      )\r\n    )\r\n  }\r\n\r\n  export default Persons","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    console.log(request)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request =  axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n}\r\n","import React from 'react'\r\n\r\nconst Notification = ({message, messageType}) => {\r\n    const notification = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 25\r\n    }\r\n\r\n    const warning = {\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n        fontSize: 25\r\n    }\r\n    \r\n    if(message === null || messageType === null) {\r\n        console.log(message, messageType)\r\n        return null\r\n    }\r\n\r\n\r\n    if(messageType === 'WARNING') {\r\n        console.log('Warning style.')\r\n        return(<div style={warning}>\r\n            {message}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div style={notification}>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './Component/Filter'\nimport PersonForm from './Component/PersonForm'\nimport Persons from './Component/Persons'\nimport personService from './Services/personService'\nimport Notification from './Component/Notification'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n\n  const [ newNumber, setNewNumber] = useState('')\n\n  const [ searchName, setSearchName] = useState('')\n\n  const [ notification, setNotification] = useState({message: '', messageType: ''})\n  \n  console.log(persons)\n\n\n  const filteredPersons = persons.filter(person => person.name.includes(searchName))\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialResponse => {\n        console.log(initialResponse)\n        setPersons(initialResponse)\n      })\n  }, [persons.length])\n\n const handleNameChange = (event) => {\n    setNewName(event.target.value)\n }\n\n const handleSearchNameChange = (event) => {\n  setSearchName(event.target.value)\n}\n\n const handleNumberChange = (event) => {\n   setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()  \n  \n    const existingPerson = persons.filter(person => person.name === newName)\n\n    const newPersonObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    // Filter check if the person already exists, if so ask the user if she wishes to replace the number or not.\n    // No validation whether the number is the same as before or if it has been changed, but this could easily be added.\n\n    if(existingPerson.length > 0) {\n      if(window.confirm((`${newName} is already added to the phonebook, replace the old number with a new one ?`))) {\n        return updatePerson(existingPerson[0].id,  newPersonObject)\n      }\n        return \n    }\n\n     personService\n      .create(newPersonObject)\n        .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNotification({\n              message:`'${newPersonObject.name}' was added to the phonebook`,\n              messageType: 'NOTIFICATION'}\n            )\n            setTimeout(() => {\n              setNotification({message: '', messageType:''})\n            }, 5000)      \n          }).catch(Error => {\n            console.log(Error.response.data)\n            setNotification({\n              message: Error.response.data.error, messageType: 'WARNING'\n            })\n          })\n  }\n\n  // Updates the person object if it already exist, compares the id of the persons array with the id from the person who already exists\n\n  const updatePerson = (existingPersonId, newPersonObject) => {\n    personService\n    .update(existingPersonId, newPersonObject)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== existingPersonId ? person : returnedPerson))\n      setNotification({\n         message:`${newPersonObject.name}' was added to the phonebook`,\n         messageType: 'NOTIFICIATION'\n        }\n      )\n      setTimeout(() => {\n        setNotification({ message: '', messageType: \"\"})\n      }, 5000)    \n    }).catch(Error => {\n      setNotification({\n        message:  `Information about ${newPersonObject.name}' was already deleted from the server`,\n        messageType: 'WARNING'\n        }\n      )\n      setTimeout(() => {\n        setNotification({ message: '', messageType: \"\" })\n      }, 5000)\n      setPersons(persons.filter(p => p.id !== existingPersonId))\n    }) \n  }\n\n  const deletePerson = (event) => {\n    if(window.confirm('Would you like to delete this person ? ')) {\n      event.preventDefault()\n      const newPersonArray = [...persons]\n      const indexOfDeletedPerson = persons.findIndex(p => p.name === event.target.value)\n      const personToBeDeleted = persons[indexOfDeletedPerson]\n      newPersonArray.splice(indexOfDeletedPerson, 1)\n\n      personService\n        .deletePerson(personToBeDeleted.id)\n          .then(returnedPerson => {\n            setPersons(newPersonArray)\n          setNotification({\n              message:`'${personToBeDeleted.name}' was removed from the phonebook`,\n              messageType: 'NOTIFICATION'}\n            )\n          })\n    }\n  }\n \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification.message} messageType={notification.messageType} />\n      <Filter persons={persons} searchName={searchName} handleSearchNameChange={handleSearchNameChange} />\n      <h2>Add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <div>\n       <Persons filteredPersons={filteredPersons} deletePerson={deletePerson}/>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  // highlight-line\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}